#!/usr/bin/env bash

set -euo pipefail

log::generic () {
    local level
    level=$1 ; shift

    printf "%s\t%s\n" "$level" "$*"
}

log::info () {
    log::generic INFO "$@"
}

log::fatal () {
    log::generic FATAL "$@"
    exit 1
}

lookup-remote-tag () {
    local remote tag tagfile tagcount
    remote=$1 ; shift
    tag=$1 ; shift

    tagfile=$(mktemp)

    git ls-remote --tags "$remote" "$tag" > "$tagfile"

    tagcount=$(wc -l < "$tagfile")

    if [[ $tagcount -lt 1 ]] ; then
	log::fatal "no tags found on $remote for $tag!"
    fi

    if [[ $tagcount -gt 1 ]] ; then
	log::fatal "found more than one tag matching $tag on $remote.  cowardly giving up!"
    fi

    awk '{ print $1;}' < "$tagfile"
    rm "$tagfile"
}

fetch-remote () {
    local remote
    remote=$1 ; shift
    log::info "git fetching remote $remote..."
    git fetch "$remote"
}

default-build () {
    # shellcheck disable=SC2154,SC1091
    ( set +u && source ci/rust-version.sh stable && env | grep rust_ && cargo +"$rust_stable" deb -p "$target" )
    mv target/debian/*.deb "../build/$ref/."
}

anza-build-extra () {
    cat <<EOF >> genesis/Cargo.toml
[package.metadata.deb]
name = "svmkit-solana-genesis"
EOF

    cat <<EOF >> faucet/Cargo.toml
[package.metadata.deb]
name = "svmkit-solana-faucet"
EOF

    cat <<EOF >> cli/Cargo.toml
[package.metadata.deb]
name = "svmkit-solana-cli"
EOF

    cat <<EOF >> ledger-tool/Cargo.toml
[package.metadata.deb]
name = "svmkit-agave-ledger-tool"
EOF

    # shellcheck disable=SC2154,SC1091
    (
        set +u
        source ci/rust-version.sh stable
        env | grep rust_
        cargo +"$rust_stable" deb -p solana-genesis
        cargo +"$rust_stable" deb -p solana-faucet
        cargo +"$rust_stable" deb -p solana-cli
        cargo +"$rust_stable" deb -p agave-ledger-tool
    )

    default-build
}

build-ref () {
    local ref target
    buildfunc=default-build
    package_name=$1 ; shift
    ref=$1 ; shift
    target=$1 ; shift

    if [[ $# -gt 0 ]] ; then
	buildfunc=$1 ; shift
    fi

    log::info "building $ref -> $target..."
    mkdir -p "../build/$ref"
    git clean -f -d -x
    git checkout -f "$ref"
    git submodule update --init
    cat <<EOF >> validator/Cargo.toml
[package.metadata.deb]
name = "$package_name"
provides = "svmkit-validator"
conflicts = "svmkit-validator"
replaces = "svmkit-validator"
EOF
    $buildfunc
    git submodule deinit --all
    git checkout -f master
}

build-with-other-clang () {
    local tmpdir llvmroot

    tmpdir=$(mktemp -d)
    llvmroot=/usr/lib/llvm-14

    # This is a massive hack to work around lack of configurability inside crates.
    cat <<'EOF' > "$tmpdir/c++"
#!/usr/bin/env bash

if echo "$@" | grep ROCKSDB > /dev/null ; then
	exec $llvmroot/bin/clang++ "$@" -include cstdint
else
	exec $llvmroot/bin/clang++ "$@"
fi
EOF
    chmod 755 "$tmpdir/c++"

    ln -s $llvmroot/bin/clang "$tmpdir/clang"
    ln -s $llvmroot/bin/clang++ "$tmpdir/clang++"

    ln -s $llvmroot/bin/cc "$tmpdir/cc"

    PATH=$tmpdir:$PATH LLVM_CONFIG_PATH=$llvmroot/bin/llvm-config LIBCLANG_PATH=$llvmroot/lib/libclang.so.1 default-build
    rm -rf "$tmpdir"
}

for remote in solana-labs anza-xyz PowerLedger jito-foundation pyth-network mantis ; do
    fetch-remote $remote
done

build-ref svmkit-solana-validator solana-labs/master solana-validator

for tag in v1.18.24 v1.18.25 v1.18.26 v2.0.10 v2.0.13 v2.0.14 ; do
    build-ref svmkit-agave-validator "$(lookup-remote-tag anza-xyz $tag)" agave-validator anza-build-extra
done

build-ref svmkit-powerledger-validator PowerLedger/upgrade_to_v1.16.28 solana-validator
build-ref svmkit-jito-validator jito-foundation/master agave-validator

build-ref svmkit-pyth-validator pyth-network/pyth-v1.14.17 solana-validator build-with-other-clang

build-ref svmkit-mantis-validator mantis/mantis/diet-validator-rpc solana-validator
