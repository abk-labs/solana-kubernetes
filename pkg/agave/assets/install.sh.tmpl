# -*- mode: shell-script -*-
# shellcheck shell=bash

: "${RPC_SERVICE_TIMEOUT:=60}"

VALIDATOR_SERVICE=${VALIDATOR_PACKAGE}.service

step::00::wait-for-a-stable-environment() {
    cloud-init::wait-for-stable-environment
}

step::05::setup-abklabs-apt() {
    apt::setup-abk-apt-source
}

step::10::install-packages() {

    echo "$VALIDATOR_PACKAGE $VALIDATOR_PACKAGE/has-startup-policy boolean ${HAS_STARTUP_POLICY}" | svmkit::sudo debconf-set-selections
    echo "$VALIDATOR_PACKAGE $VALIDATOR_PACKAGE/wait-for-rpc-health boolean ${WAIT_FOR_RPC_HEALTH}" | svmkit::sudo debconf-set-selections
    echo "$VALIDATOR_PACKAGE $VALIDATOR_PACKAGE/validator-env string ${VALIDATOR_ENV}" | svmkit::sudo debconf-set-selections
    echo "$VALIDATOR_PACKAGE $VALIDATOR_PACKAGE/validator-process string ${VALIDATOR_PROCESS}" | svmkit::sudo debconf-set-selections
    echo "$VALIDATOR_PACKAGE $VALIDATOR_PACKAGE/validator-flags string ${VALIDATOR_FLAGS}" | svmkit::sudo debconf-set-selections
    echo "$VALIDATOR_PACKAGE $VALIDATOR_PACKAGE/validator-exit-flags string ${VALIDATOR_EXIT_FLAGS}" | svmkit::sudo debconf-set-selections
    echo "$VALIDATOR_PACKAGE $VALIDATOR_PACKAGE/ledger-path string ${LEDGER_PATH}" | svmkit::sudo debconf-set-selections
    echo "$VALIDATOR_PACKAGE $VALIDATOR_PACKAGE/has-timeout-config boolean ${HAS_TIMEOUT_CONFIG}" | svmkit::sudo debconf-set-selections
    echo "$VALIDATOR_PACKAGE $VALIDATOR_PACKAGE/rpc-service-timeout string ${RPC_SERVICE_TIMEOUT}" | svmkit::sudo debconf-set-selections
    echo "$VALIDATOR_PACKAGE $VALIDATOR_PACKAGE/rpc-bind-address string ${RPC_BIND_ADDRESS}" | svmkit::sudo debconf-set-selections
    echo "$VALIDATOR_PACKAGE $VALIDATOR_PACKAGE/rpc-port string ${RPC_PORT}" | svmkit::sudo debconf-set-selections

    svmkit::apt::update
    svmkit::apt::get --allow-downgrades install "${PACKAGE_LIST[@]}"
}

step::20::create-sol-user() {
    create-sol-user
}

step::30::copy-validator-keys() {
    svmkit::sudo cp validator-keypair.json vote-account-keypair.json /home/sol
    svmkit::sudo chown sol:sol /home/sol/{validator-keypair,vote-account-keypair}.json
}

step::40::configure-sysctl() {
    cat <<EOF | svmkit::sudo tee /etc/sysctl.d/21-solana-validator.conf >/dev/null
# Increase UDP buffer sizes
net.core.rmem_default = 134217728
net.core.rmem_max = 134217728
net.core.wmem_default = 134217728
net.core.wmem_max = 134217728
# Increase memory mapped files limit
vm.max_map_count = 1000000
# Increase number of allowed open file descriptors
fs.nr_open = 1000000
vm.swappiness=1
EOF

    svmkit::sudo sysctl -p /etc/sysctl.d/21-solana-validator.conf
}

step::50::configure-firewall() {
    svmkit::sudo ufw allow 53
    svmkit::sudo ufw allow ssh
    svmkit::sudo ufw allow 8000:8020/tcp
    svmkit::sudo ufw allow 8000:8020/udp
    # TODO: Only open for RPC nodes
    svmkit::sudo ufw allow 8899/tcp
    svmkit::sudo ufw allow 8899/udp
    svmkit::sudo ufw allow 8900/tcp

    svmkit::sudo ufw --force enable
}

step::60::setup-logrotate() {
    cat <<EOF | svmkit::sudo tee /etc/logrotate.d/solana >/dev/null
/home/sol/log {
su sol sol
daily
rotate 1
missingok
postrotate
    systemctl kill -s USR1 "${VALIDATOR_SERVICE}"
endscript
}
EOF

    svmkit::sudo systemctl restart logrotate
}

step::75::setup-solana-cli() {
    [[ -v SOLANA_CLI_CONFIG_FLAGS ]] || return 0

    # First setup the login user.
    solana config set "${SOLANA_CLI_CONFIG_FLAGS[@]}"

    # Setup the sol user.
    svmkit::sudo -u sol -i solana config set "${SOLANA_CLI_CONFIG_FLAGS[@]}"
}

step::80::setup-validator-startup() {
    if systemctl list-unit-files "${VALIDATOR_SERVICE}" >/dev/null; then
        svmkit::sudo systemctl stop "${VALIDATOR_SERVICE}" || true
    fi

    svmkit::sudo systemctl enable "${VALIDATOR_SERVICE}"
    svmkit::sudo systemctl start "${VALIDATOR_SERVICE}"
}

step::90::setup-validator-info() {
    local args

    [[ -v VALIDATOR_INFO_NAME ]] || return 0

    if [[ -v VALIDATOR_INFO_WEBSITE ]]; then
        args+=(--website "$VALIDATOR_INFO_WEBSITE")
    fi

    if [[ -v VALIDATOR_INFO_ICON_URL ]]; then
        args+=(--icon-url "$VALIDATOR_INFO_ICON_URL")
    fi

    if [[ -v VALIDATOR_INFO_DETAILS ]]; then
        args+=(--details "$VALIDATOR_INFO_DETAILS")
    fi

    svmkit::sudo -u sol -i solana validator-info publish "${args[@]}" "$VALIDATOR_INFO_NAME"
}
